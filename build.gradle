plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.hello'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	implementation 'io.swagger:swagger-annotations:1.6.8'
	implementation 'io.springfox:springfox-swagger2:3.0.0'


	//h2
	implementation 'com.h2database:h2'

	runtimeOnly 'com.h2database:h2'


	//mariadb
	implementation('org.mariadb.jdbc:mariadb-java-client:3.1.2')

	//Oauth2
	implementation('org.springframework.boot:spring-boot-starter-oauth2-client')

	//mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	//

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    testImplementation 'org.projectlombok:lombok:1.18.28'
	testImplementation 'org.projectlombok:lombok:1.18.28'
    testImplementation 'junit:junit:4.13.1'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	// test
	testImplementation('org.junit.jupiter:junit-jupiter')
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')

	// json setting
	implementation 'org.json:json:20200518'
}

tasks.named('test') {
	useJUnitPlatform()
}
